/*
 * Overview
 * Fetch company/companies overview(s)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.roaring.example.companyinfo.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.roaring.example.companyinfo.invoker.JSON;

/**
 * Company overview
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-11T11:07:20.642217455+01:00[Europe/Stockholm]", comments = "Generator version: 7.12.0")
public class Overview {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  @javax.annotation.Nullable
  private String address;

  public static final String SERIALIZED_NAME_CHANGE_DATE = "changeDate";
  @SerializedName(SERIALIZED_NAME_CHANGE_DATE)
  @javax.annotation.Nullable
  private String changeDate;

  public static final String SERIALIZED_NAME_CO_ADDRESS = "coAddress";
  @SerializedName(SERIALIZED_NAME_CO_ADDRESS)
  @javax.annotation.Nullable
  private String coAddress;

  public static final String SERIALIZED_NAME_COMMUNE = "commune";
  @SerializedName(SERIALIZED_NAME_COMMUNE)
  @javax.annotation.Nullable
  private String commune;

  public static final String SERIALIZED_NAME_COMMUNE_CODE = "communeCode";
  @SerializedName(SERIALIZED_NAME_COMMUNE_CODE)
  @javax.annotation.Nullable
  private String communeCode;

  public static final String SERIALIZED_NAME_COMPANY_DEREGISTRATION_DATE = "companyDeregistrationDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_DEREGISTRATION_DATE)
  @javax.annotation.Nullable
  private String companyDeregistrationDate;

  public static final String SERIALIZED_NAME_COMPANY_HOLDER = "companyHolder";
  @SerializedName(SERIALIZED_NAME_COMPANY_HOLDER)
  @javax.annotation.Nullable
  private String companyHolder;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  @javax.annotation.Nullable
  private String companyId;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  @javax.annotation.Nullable
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_REGISTRATION_DATE = "companyRegistrationDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_REGISTRATION_DATE)
  @javax.annotation.Nullable
  private String companyRegistrationDate;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  @javax.annotation.Nullable
  private String county;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_EMPLOYER_CONTRIBUTION_REG = "employerContributionReg";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CONTRIBUTION_REG)
  @javax.annotation.Nullable
  private Boolean employerContributionReg;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "faxNumber";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  @javax.annotation.Nullable
  private String faxNumber;

  public static final String SERIALIZED_NAME_INDUSTRY_CODE = "industryCode";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_CODE)
  @javax.annotation.Nullable
  private String industryCode;

  public static final String SERIALIZED_NAME_INDUSTRY_TEXT = "industryText";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_TEXT)
  @javax.annotation.Nullable
  private String industryText;

  public static final String SERIALIZED_NAME_LEGAL_GROUP_CODE = "legalGroupCode";
  @SerializedName(SERIALIZED_NAME_LEGAL_GROUP_CODE)
  @javax.annotation.Nullable
  private String legalGroupCode;

  public static final String SERIALIZED_NAME_LEGAL_GROUP_TEXT = "legalGroupText";
  @SerializedName(SERIALIZED_NAME_LEGAL_GROUP_TEXT)
  @javax.annotation.Nullable
  private String legalGroupText;

  public static final String SERIALIZED_NAME_NUMBER_COMPANY_UNITS = "numberCompanyUnits";
  @SerializedName(SERIALIZED_NAME_NUMBER_COMPANY_UNITS)
  @javax.annotation.Nullable
  private Integer numberCompanyUnits;

  public static final String SERIALIZED_NAME_NUMBER_EMPLOYEES_INTERVAL = "numberEmployeesInterval";
  @SerializedName(SERIALIZED_NAME_NUMBER_EMPLOYEES_INTERVAL)
  @javax.annotation.Nullable
  private String numberEmployeesInterval;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  @javax.annotation.Nullable
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PRELIMINARY_TAX_REG = "preliminaryTaxReg";
  @SerializedName(SERIALIZED_NAME_PRELIMINARY_TAX_REG)
  @javax.annotation.Nullable
  private Boolean preliminaryTaxReg;

  public static final String SERIALIZED_NAME_PRELIMINARY_TAX_REG_DATE = "preliminaryTaxRegDate";
  @SerializedName(SERIALIZED_NAME_PRELIMINARY_TAX_REG_DATE)
  @javax.annotation.Nullable
  private String preliminaryTaxRegDate;

  public static final String SERIALIZED_NAME_SEVERAL_COMPANY_NAME = "severalCompanyName";
  @SerializedName(SERIALIZED_NAME_SEVERAL_COMPANY_NAME)
  @javax.annotation.Nullable
  private Boolean severalCompanyName;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  @javax.annotation.Nullable
  private String statusCode;

  public static final String SERIALIZED_NAME_STATUS_DATE_FROM = "statusDateFrom";
  @SerializedName(SERIALIZED_NAME_STATUS_DATE_FROM)
  @javax.annotation.Nullable
  private String statusDateFrom;

  public static final String SERIALIZED_NAME_STATUS_TEXT_DETAILED = "statusTextDetailed";
  @SerializedName(SERIALIZED_NAME_STATUS_TEXT_DETAILED)
  @javax.annotation.Nullable
  private String statusTextDetailed;

  public static final String SERIALIZED_NAME_STATUS_TEXT_HIGH = "statusTextHigh";
  @SerializedName(SERIALIZED_NAME_STATUS_TEXT_HIGH)
  @javax.annotation.Nullable
  private String statusTextHigh;

  public static final String SERIALIZED_NAME_TOP_DIRECTOR_FUNCTION = "topDirectorFunction";
  @SerializedName(SERIALIZED_NAME_TOP_DIRECTOR_FUNCTION)
  @javax.annotation.Nullable
  private String topDirectorFunction;

  public static final String SERIALIZED_NAME_TOP_DIRECTOR_NAME = "topDirectorName";
  @SerializedName(SERIALIZED_NAME_TOP_DIRECTOR_NAME)
  @javax.annotation.Nullable
  private String topDirectorName;

  public static final String SERIALIZED_NAME_TOWN = "town";
  @SerializedName(SERIALIZED_NAME_TOWN)
  @javax.annotation.Nullable
  private String town;

  public static final String SERIALIZED_NAME_VAT_REG = "vatReg";
  @SerializedName(SERIALIZED_NAME_VAT_REG)
  @javax.annotation.Nullable
  private Boolean vatReg;

  public static final String SERIALIZED_NAME_VAT_REG_DATE = "vatRegDate";
  @SerializedName(SERIALIZED_NAME_VAT_REG_DATE)
  @javax.annotation.Nullable
  private String vatRegDate;

  public static final String SERIALIZED_NAME_VISIT_ADDRESS = "visitAddress";
  @SerializedName(SERIALIZED_NAME_VISIT_ADDRESS)
  @javax.annotation.Nullable
  private String visitAddress;

  public static final String SERIALIZED_NAME_VISIT_COMMUNE = "visitCommune";
  @SerializedName(SERIALIZED_NAME_VISIT_COMMUNE)
  @javax.annotation.Nullable
  private String visitCommune;

  public static final String SERIALIZED_NAME_VISIT_COUNTY = "visitCounty";
  @SerializedName(SERIALIZED_NAME_VISIT_COUNTY)
  @javax.annotation.Nullable
  private String visitCounty;

  public static final String SERIALIZED_NAME_VISIT_STREET = "visitStreet";
  @SerializedName(SERIALIZED_NAME_VISIT_STREET)
  @javax.annotation.Nullable
  private String visitStreet;

  public static final String SERIALIZED_NAME_VISIT_TOWN = "visitTown";
  @SerializedName(SERIALIZED_NAME_VISIT_TOWN)
  @javax.annotation.Nullable
  private String visitTown;

  public static final String SERIALIZED_NAME_VISIT_ZIP_CODE = "visitZipCode";
  @SerializedName(SERIALIZED_NAME_VISIT_ZIP_CODE)
  @javax.annotation.Nullable
  private String visitZipCode;

  public static final String SERIALIZED_NAME_WEB_ADDRESS = "webAddress";
  @SerializedName(SERIALIZED_NAME_WEB_ADDRESS)
  @javax.annotation.Nullable
  private String webAddress;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  @javax.annotation.Nullable
  private String zipCode;

  public Overview() {
  }

  public Overview address(@javax.annotation.Nullable String address) {
    this.address = address;
    return this;
  }

  /**
   * Postal address, street/P.O BOX
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(@javax.annotation.Nullable String address) {
    this.address = address;
  }


  public Overview changeDate(@javax.annotation.Nullable String changeDate) {
    this.changeDate = changeDate;
    return this;
  }

  /**
   * Date for when the record was changed
   * @return changeDate
   */
  @javax.annotation.Nullable
  public String getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(@javax.annotation.Nullable String changeDate) {
    this.changeDate = changeDate;
  }


  public Overview coAddress(@javax.annotation.Nullable String coAddress) {
    this.coAddress = coAddress;
    return this;
  }

  /**
   * Postal address, C/O address
   * @return coAddress
   */
  @javax.annotation.Nullable
  public String getCoAddress() {
    return coAddress;
  }

  public void setCoAddress(@javax.annotation.Nullable String coAddress) {
    this.coAddress = coAddress;
  }


  public Overview commune(@javax.annotation.Nullable String commune) {
    this.commune = commune;
    return this;
  }

  /**
   * Postal address, commune name
   * @return commune
   */
  @javax.annotation.Nullable
  public String getCommune() {
    return commune;
  }

  public void setCommune(@javax.annotation.Nullable String commune) {
    this.commune = commune;
  }


  public Overview communeCode(@javax.annotation.Nullable String communeCode) {
    this.communeCode = communeCode;
    return this;
  }

  /**
   * Postal address, commune code
   * @return communeCode
   */
  @javax.annotation.Nullable
  public String getCommuneCode() {
    return communeCode;
  }

  public void setCommuneCode(@javax.annotation.Nullable String communeCode) {
    this.communeCode = communeCode;
  }


  public Overview companyDeregistrationDate(@javax.annotation.Nullable String companyDeregistrationDate) {
    this.companyDeregistrationDate = companyDeregistrationDate;
    return this;
  }

  /**
   * Company deregistration date
   * @return companyDeregistrationDate
   */
  @javax.annotation.Nullable
  public String getCompanyDeregistrationDate() {
    return companyDeregistrationDate;
  }

  public void setCompanyDeregistrationDate(@javax.annotation.Nullable String companyDeregistrationDate) {
    this.companyDeregistrationDate = companyDeregistrationDate;
  }


  public Overview companyHolder(@javax.annotation.Nullable String companyHolder) {
    this.companyHolder = companyHolder;
    return this;
  }

  /**
   * Name of company holder
   * @return companyHolder
   */
  @javax.annotation.Nullable
  public String getCompanyHolder() {
    return companyHolder;
  }

  public void setCompanyHolder(@javax.annotation.Nullable String companyHolder) {
    this.companyHolder = companyHolder;
  }


  public Overview companyId(@javax.annotation.Nullable String companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * Company identifier (company registration number / organization number)
   * @return companyId
   */
  @javax.annotation.Nullable
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(@javax.annotation.Nullable String companyId) {
    this.companyId = companyId;
  }


  public Overview companyName(@javax.annotation.Nullable String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Company name
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(@javax.annotation.Nullable String companyName) {
    this.companyName = companyName;
  }


  public Overview companyRegistrationDate(@javax.annotation.Nullable String companyRegistrationDate) {
    this.companyRegistrationDate = companyRegistrationDate;
    return this;
  }

  /**
   * Company registration date
   * @return companyRegistrationDate
   */
  @javax.annotation.Nullable
  public String getCompanyRegistrationDate() {
    return companyRegistrationDate;
  }

  public void setCompanyRegistrationDate(@javax.annotation.Nullable String companyRegistrationDate) {
    this.companyRegistrationDate = companyRegistrationDate;
  }


  public Overview county(@javax.annotation.Nullable String county) {
    this.county = county;
    return this;
  }

  /**
   * Postal address, county
   * @return county
   */
  @javax.annotation.Nullable
  public String getCounty() {
    return county;
  }

  public void setCounty(@javax.annotation.Nullable String county) {
    this.county = county;
  }


  public Overview email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Email address
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public Overview employerContributionReg(@javax.annotation.Nullable Boolean employerContributionReg) {
    this.employerContributionReg = employerContributionReg;
    return this;
  }

  /**
   * Company is registered for employer contribution tax (Arb.avg Sweden)
   * @return employerContributionReg
   */
  @javax.annotation.Nullable
  public Boolean getEmployerContributionReg() {
    return employerContributionReg;
  }

  public void setEmployerContributionReg(@javax.annotation.Nullable Boolean employerContributionReg) {
    this.employerContributionReg = employerContributionReg;
  }


  public Overview faxNumber(@javax.annotation.Nullable String faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

  /**
   * Fax number
   * @return faxNumber
   */
  @javax.annotation.Nullable
  public String getFaxNumber() {
    return faxNumber;
  }

  public void setFaxNumber(@javax.annotation.Nullable String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public Overview industryCode(@javax.annotation.Nullable String industryCode) {
    this.industryCode = industryCode;
    return this;
  }

  /**
   * Company main industry, NACE code
   * @return industryCode
   */
  @javax.annotation.Nullable
  public String getIndustryCode() {
    return industryCode;
  }

  public void setIndustryCode(@javax.annotation.Nullable String industryCode) {
    this.industryCode = industryCode;
  }


  public Overview industryText(@javax.annotation.Nullable String industryText) {
    this.industryText = industryText;
    return this;
  }

  /**
   * Company main industry, NACE text
   * @return industryText
   */
  @javax.annotation.Nullable
  public String getIndustryText() {
    return industryText;
  }

  public void setIndustryText(@javax.annotation.Nullable String industryText) {
    this.industryText = industryText;
  }


  public Overview legalGroupCode(@javax.annotation.Nullable String legalGroupCode) {
    this.legalGroupCode = legalGroupCode;
    return this;
  }

  /**
   * Company type code
   * @return legalGroupCode
   */
  @javax.annotation.Nullable
  public String getLegalGroupCode() {
    return legalGroupCode;
  }

  public void setLegalGroupCode(@javax.annotation.Nullable String legalGroupCode) {
    this.legalGroupCode = legalGroupCode;
  }


  public Overview legalGroupText(@javax.annotation.Nullable String legalGroupText) {
    this.legalGroupText = legalGroupText;
    return this;
  }

  /**
   * Company type text
   * @return legalGroupText
   */
  @javax.annotation.Nullable
  public String getLegalGroupText() {
    return legalGroupText;
  }

  public void setLegalGroupText(@javax.annotation.Nullable String legalGroupText) {
    this.legalGroupText = legalGroupText;
  }


  public Overview numberCompanyUnits(@javax.annotation.Nullable Integer numberCompanyUnits) {
    this.numberCompanyUnits = numberCompanyUnits;
    return this;
  }

  /**
   * Number of company units/workplaces
   * @return numberCompanyUnits
   */
  @javax.annotation.Nullable
  public Integer getNumberCompanyUnits() {
    return numberCompanyUnits;
  }

  public void setNumberCompanyUnits(@javax.annotation.Nullable Integer numberCompanyUnits) {
    this.numberCompanyUnits = numberCompanyUnits;
  }


  public Overview numberEmployeesInterval(@javax.annotation.Nullable String numberEmployeesInterval) {
    this.numberEmployeesInterval = numberEmployeesInterval;
    return this;
  }

  /**
   * Number of employees (interval)
   * @return numberEmployeesInterval
   */
  @javax.annotation.Nullable
  public String getNumberEmployeesInterval() {
    return numberEmployeesInterval;
  }

  public void setNumberEmployeesInterval(@javax.annotation.Nullable String numberEmployeesInterval) {
    this.numberEmployeesInterval = numberEmployeesInterval;
  }


  public Overview phoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Telephone number
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Overview preliminaryTaxReg(@javax.annotation.Nullable Boolean preliminaryTaxReg) {
    this.preliminaryTaxReg = preliminaryTaxReg;
    return this;
  }

  /**
   * Company is approved for preliminary tax (F-skatt Sweden)
   * @return preliminaryTaxReg
   */
  @javax.annotation.Nullable
  public Boolean getPreliminaryTaxReg() {
    return preliminaryTaxReg;
  }

  public void setPreliminaryTaxReg(@javax.annotation.Nullable Boolean preliminaryTaxReg) {
    this.preliminaryTaxReg = preliminaryTaxReg;
  }


  public Overview preliminaryTaxRegDate(@javax.annotation.Nullable String preliminaryTaxRegDate) {
    this.preliminaryTaxRegDate = preliminaryTaxRegDate;
    return this;
  }

  /**
   * Date when company is approved for preliminary tax (F-skatt Sweden)
   * @return preliminaryTaxRegDate
   */
  @javax.annotation.Nullable
  public String getPreliminaryTaxRegDate() {
    return preliminaryTaxRegDate;
  }

  public void setPreliminaryTaxRegDate(@javax.annotation.Nullable String preliminaryTaxRegDate) {
    this.preliminaryTaxRegDate = preliminaryTaxRegDate;
  }


  public Overview severalCompanyName(@javax.annotation.Nullable Boolean severalCompanyName) {
    this.severalCompanyName = severalCompanyName;
    return this;
  }

  /**
   * Indicates if the company have more than one active name
   * @return severalCompanyName
   */
  @javax.annotation.Nullable
  public Boolean getSeveralCompanyName() {
    return severalCompanyName;
  }

  public void setSeveralCompanyName(@javax.annotation.Nullable Boolean severalCompanyName) {
    this.severalCompanyName = severalCompanyName;
  }


  public Overview statusCode(@javax.annotation.Nullable String statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Company status code
   * @return statusCode
   */
  @javax.annotation.Nullable
  public String getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(@javax.annotation.Nullable String statusCode) {
    this.statusCode = statusCode;
  }


  public Overview statusDateFrom(@javax.annotation.Nullable String statusDateFrom) {
    this.statusDateFrom = statusDateFrom;
    return this;
  }

  /**
   * Company status date from
   * @return statusDateFrom
   */
  @javax.annotation.Nullable
  public String getStatusDateFrom() {
    return statusDateFrom;
  }

  public void setStatusDateFrom(@javax.annotation.Nullable String statusDateFrom) {
    this.statusDateFrom = statusDateFrom;
  }


  public Overview statusTextDetailed(@javax.annotation.Nullable String statusTextDetailed) {
    this.statusTextDetailed = statusTextDetailed;
    return this;
  }

  /**
   * Company status text detailed
   * @return statusTextDetailed
   */
  @javax.annotation.Nullable
  public String getStatusTextDetailed() {
    return statusTextDetailed;
  }

  public void setStatusTextDetailed(@javax.annotation.Nullable String statusTextDetailed) {
    this.statusTextDetailed = statusTextDetailed;
  }


  public Overview statusTextHigh(@javax.annotation.Nullable String statusTextHigh) {
    this.statusTextHigh = statusTextHigh;
    return this;
  }

  /**
   * Company status text
   * @return statusTextHigh
   */
  @javax.annotation.Nullable
  public String getStatusTextHigh() {
    return statusTextHigh;
  }

  public void setStatusTextHigh(@javax.annotation.Nullable String statusTextHigh) {
    this.statusTextHigh = statusTextHigh;
  }


  public Overview topDirectorFunction(@javax.annotation.Nullable String topDirectorFunction) {
    this.topDirectorFunction = topDirectorFunction;
    return this;
  }

  /**
   * Top director&#39;s function
   * @return topDirectorFunction
   */
  @javax.annotation.Nullable
  public String getTopDirectorFunction() {
    return topDirectorFunction;
  }

  public void setTopDirectorFunction(@javax.annotation.Nullable String topDirectorFunction) {
    this.topDirectorFunction = topDirectorFunction;
  }


  public Overview topDirectorName(@javax.annotation.Nullable String topDirectorName) {
    this.topDirectorName = topDirectorName;
    return this;
  }

  /**
   * Top director&#39;s name
   * @return topDirectorName
   */
  @javax.annotation.Nullable
  public String getTopDirectorName() {
    return topDirectorName;
  }

  public void setTopDirectorName(@javax.annotation.Nullable String topDirectorName) {
    this.topDirectorName = topDirectorName;
  }


  public Overview town(@javax.annotation.Nullable String town) {
    this.town = town;
    return this;
  }

  /**
   * Postal address, town
   * @return town
   */
  @javax.annotation.Nullable
  public String getTown() {
    return town;
  }

  public void setTown(@javax.annotation.Nullable String town) {
    this.town = town;
  }


  public Overview vatReg(@javax.annotation.Nullable Boolean vatReg) {
    this.vatReg = vatReg;
    return this;
  }

  /**
   * Company is registered for VAT (MOMS Sweden)
   * @return vatReg
   */
  @javax.annotation.Nullable
  public Boolean getVatReg() {
    return vatReg;
  }

  public void setVatReg(@javax.annotation.Nullable Boolean vatReg) {
    this.vatReg = vatReg;
  }


  public Overview vatRegDate(@javax.annotation.Nullable String vatRegDate) {
    this.vatRegDate = vatRegDate;
    return this;
  }

  /**
   * VAT start date
   * @return vatRegDate
   */
  @javax.annotation.Nullable
  public String getVatRegDate() {
    return vatRegDate;
  }

  public void setVatRegDate(@javax.annotation.Nullable String vatRegDate) {
    this.vatRegDate = vatRegDate;
  }


  public Overview visitAddress(@javax.annotation.Nullable String visitAddress) {
    this.visitAddress = visitAddress;
    return this;
  }

  /**
   * Visiting address, street name, street number and unit
   * @return visitAddress
   */
  @javax.annotation.Nullable
  public String getVisitAddress() {
    return visitAddress;
  }

  public void setVisitAddress(@javax.annotation.Nullable String visitAddress) {
    this.visitAddress = visitAddress;
  }


  public Overview visitCommune(@javax.annotation.Nullable String visitCommune) {
    this.visitCommune = visitCommune;
    return this;
  }

  /**
   * Visiting address, commune
   * @return visitCommune
   */
  @javax.annotation.Nullable
  public String getVisitCommune() {
    return visitCommune;
  }

  public void setVisitCommune(@javax.annotation.Nullable String visitCommune) {
    this.visitCommune = visitCommune;
  }


  public Overview visitCounty(@javax.annotation.Nullable String visitCounty) {
    this.visitCounty = visitCounty;
    return this;
  }

  /**
   * Visiting address, county
   * @return visitCounty
   */
  @javax.annotation.Nullable
  public String getVisitCounty() {
    return visitCounty;
  }

  public void setVisitCounty(@javax.annotation.Nullable String visitCounty) {
    this.visitCounty = visitCounty;
  }


  public Overview visitStreet(@javax.annotation.Nullable String visitStreet) {
    this.visitStreet = visitStreet;
    return this;
  }

  /**
   * Visiting address, street
   * @return visitStreet
   */
  @javax.annotation.Nullable
  public String getVisitStreet() {
    return visitStreet;
  }

  public void setVisitStreet(@javax.annotation.Nullable String visitStreet) {
    this.visitStreet = visitStreet;
  }


  public Overview visitTown(@javax.annotation.Nullable String visitTown) {
    this.visitTown = visitTown;
    return this;
  }

  /**
   * Visiting address, town
   * @return visitTown
   */
  @javax.annotation.Nullable
  public String getVisitTown() {
    return visitTown;
  }

  public void setVisitTown(@javax.annotation.Nullable String visitTown) {
    this.visitTown = visitTown;
  }


  public Overview visitZipCode(@javax.annotation.Nullable String visitZipCode) {
    this.visitZipCode = visitZipCode;
    return this;
  }

  /**
   * Visiting address, zip code
   * @return visitZipCode
   */
  @javax.annotation.Nullable
  public String getVisitZipCode() {
    return visitZipCode;
  }

  public void setVisitZipCode(@javax.annotation.Nullable String visitZipCode) {
    this.visitZipCode = visitZipCode;
  }


  public Overview webAddress(@javax.annotation.Nullable String webAddress) {
    this.webAddress = webAddress;
    return this;
  }

  /**
   * Web address
   * @return webAddress
   */
  @javax.annotation.Nullable
  public String getWebAddress() {
    return webAddress;
  }

  public void setWebAddress(@javax.annotation.Nullable String webAddress) {
    this.webAddress = webAddress;
  }


  public Overview zipCode(@javax.annotation.Nullable String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

  /**
   * Postal address, zipcode
   * @return zipCode
   */
  @javax.annotation.Nullable
  public String getZipCode() {
    return zipCode;
  }

  public void setZipCode(@javax.annotation.Nullable String zipCode) {
    this.zipCode = zipCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Overview overview = (Overview) o;
    return Objects.equals(this.address, overview.address) &&
        Objects.equals(this.changeDate, overview.changeDate) &&
        Objects.equals(this.coAddress, overview.coAddress) &&
        Objects.equals(this.commune, overview.commune) &&
        Objects.equals(this.communeCode, overview.communeCode) &&
        Objects.equals(this.companyDeregistrationDate, overview.companyDeregistrationDate) &&
        Objects.equals(this.companyHolder, overview.companyHolder) &&
        Objects.equals(this.companyId, overview.companyId) &&
        Objects.equals(this.companyName, overview.companyName) &&
        Objects.equals(this.companyRegistrationDate, overview.companyRegistrationDate) &&
        Objects.equals(this.county, overview.county) &&
        Objects.equals(this.email, overview.email) &&
        Objects.equals(this.employerContributionReg, overview.employerContributionReg) &&
        Objects.equals(this.faxNumber, overview.faxNumber) &&
        Objects.equals(this.industryCode, overview.industryCode) &&
        Objects.equals(this.industryText, overview.industryText) &&
        Objects.equals(this.legalGroupCode, overview.legalGroupCode) &&
        Objects.equals(this.legalGroupText, overview.legalGroupText) &&
        Objects.equals(this.numberCompanyUnits, overview.numberCompanyUnits) &&
        Objects.equals(this.numberEmployeesInterval, overview.numberEmployeesInterval) &&
        Objects.equals(this.phoneNumber, overview.phoneNumber) &&
        Objects.equals(this.preliminaryTaxReg, overview.preliminaryTaxReg) &&
        Objects.equals(this.preliminaryTaxRegDate, overview.preliminaryTaxRegDate) &&
        Objects.equals(this.severalCompanyName, overview.severalCompanyName) &&
        Objects.equals(this.statusCode, overview.statusCode) &&
        Objects.equals(this.statusDateFrom, overview.statusDateFrom) &&
        Objects.equals(this.statusTextDetailed, overview.statusTextDetailed) &&
        Objects.equals(this.statusTextHigh, overview.statusTextHigh) &&
        Objects.equals(this.topDirectorFunction, overview.topDirectorFunction) &&
        Objects.equals(this.topDirectorName, overview.topDirectorName) &&
        Objects.equals(this.town, overview.town) &&
        Objects.equals(this.vatReg, overview.vatReg) &&
        Objects.equals(this.vatRegDate, overview.vatRegDate) &&
        Objects.equals(this.visitAddress, overview.visitAddress) &&
        Objects.equals(this.visitCommune, overview.visitCommune) &&
        Objects.equals(this.visitCounty, overview.visitCounty) &&
        Objects.equals(this.visitStreet, overview.visitStreet) &&
        Objects.equals(this.visitTown, overview.visitTown) &&
        Objects.equals(this.visitZipCode, overview.visitZipCode) &&
        Objects.equals(this.webAddress, overview.webAddress) &&
        Objects.equals(this.zipCode, overview.zipCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, changeDate, coAddress, commune, communeCode, companyDeregistrationDate, companyHolder, companyId, companyName, companyRegistrationDate, county, email, employerContributionReg, faxNumber, industryCode, industryText, legalGroupCode, legalGroupText, numberCompanyUnits, numberEmployeesInterval, phoneNumber, preliminaryTaxReg, preliminaryTaxRegDate, severalCompanyName, statusCode, statusDateFrom, statusTextDetailed, statusTextHigh, topDirectorFunction, topDirectorName, town, vatReg, vatRegDate, visitAddress, visitCommune, visitCounty, visitStreet, visitTown, visitZipCode, webAddress, zipCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Overview {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    coAddress: ").append(toIndentedString(coAddress)).append("\n");
    sb.append("    commune: ").append(toIndentedString(commune)).append("\n");
    sb.append("    communeCode: ").append(toIndentedString(communeCode)).append("\n");
    sb.append("    companyDeregistrationDate: ").append(toIndentedString(companyDeregistrationDate)).append("\n");
    sb.append("    companyHolder: ").append(toIndentedString(companyHolder)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyRegistrationDate: ").append(toIndentedString(companyRegistrationDate)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    employerContributionReg: ").append(toIndentedString(employerContributionReg)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    industryCode: ").append(toIndentedString(industryCode)).append("\n");
    sb.append("    industryText: ").append(toIndentedString(industryText)).append("\n");
    sb.append("    legalGroupCode: ").append(toIndentedString(legalGroupCode)).append("\n");
    sb.append("    legalGroupText: ").append(toIndentedString(legalGroupText)).append("\n");
    sb.append("    numberCompanyUnits: ").append(toIndentedString(numberCompanyUnits)).append("\n");
    sb.append("    numberEmployeesInterval: ").append(toIndentedString(numberEmployeesInterval)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    preliminaryTaxReg: ").append(toIndentedString(preliminaryTaxReg)).append("\n");
    sb.append("    preliminaryTaxRegDate: ").append(toIndentedString(preliminaryTaxRegDate)).append("\n");
    sb.append("    severalCompanyName: ").append(toIndentedString(severalCompanyName)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusDateFrom: ").append(toIndentedString(statusDateFrom)).append("\n");
    sb.append("    statusTextDetailed: ").append(toIndentedString(statusTextDetailed)).append("\n");
    sb.append("    statusTextHigh: ").append(toIndentedString(statusTextHigh)).append("\n");
    sb.append("    topDirectorFunction: ").append(toIndentedString(topDirectorFunction)).append("\n");
    sb.append("    topDirectorName: ").append(toIndentedString(topDirectorName)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("    vatReg: ").append(toIndentedString(vatReg)).append("\n");
    sb.append("    vatRegDate: ").append(toIndentedString(vatRegDate)).append("\n");
    sb.append("    visitAddress: ").append(toIndentedString(visitAddress)).append("\n");
    sb.append("    visitCommune: ").append(toIndentedString(visitCommune)).append("\n");
    sb.append("    visitCounty: ").append(toIndentedString(visitCounty)).append("\n");
    sb.append("    visitStreet: ").append(toIndentedString(visitStreet)).append("\n");
    sb.append("    visitTown: ").append(toIndentedString(visitTown)).append("\n");
    sb.append("    visitZipCode: ").append(toIndentedString(visitZipCode)).append("\n");
    sb.append("    webAddress: ").append(toIndentedString(webAddress)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("changeDate");
    openapiFields.add("coAddress");
    openapiFields.add("commune");
    openapiFields.add("communeCode");
    openapiFields.add("companyDeregistrationDate");
    openapiFields.add("companyHolder");
    openapiFields.add("companyId");
    openapiFields.add("companyName");
    openapiFields.add("companyRegistrationDate");
    openapiFields.add("county");
    openapiFields.add("email");
    openapiFields.add("employerContributionReg");
    openapiFields.add("faxNumber");
    openapiFields.add("industryCode");
    openapiFields.add("industryText");
    openapiFields.add("legalGroupCode");
    openapiFields.add("legalGroupText");
    openapiFields.add("numberCompanyUnits");
    openapiFields.add("numberEmployeesInterval");
    openapiFields.add("phoneNumber");
    openapiFields.add("preliminaryTaxReg");
    openapiFields.add("preliminaryTaxRegDate");
    openapiFields.add("severalCompanyName");
    openapiFields.add("statusCode");
    openapiFields.add("statusDateFrom");
    openapiFields.add("statusTextDetailed");
    openapiFields.add("statusTextHigh");
    openapiFields.add("topDirectorFunction");
    openapiFields.add("topDirectorName");
    openapiFields.add("town");
    openapiFields.add("vatReg");
    openapiFields.add("vatRegDate");
    openapiFields.add("visitAddress");
    openapiFields.add("visitCommune");
    openapiFields.add("visitCounty");
    openapiFields.add("visitStreet");
    openapiFields.add("visitTown");
    openapiFields.add("visitZipCode");
    openapiFields.add("webAddress");
    openapiFields.add("zipCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Overview
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Overview.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Overview is not found in the empty JSON string", Overview.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Overview.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Overview` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("changeDate") != null && !jsonObj.get("changeDate").isJsonNull()) && !jsonObj.get("changeDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeDate").toString()));
      }
      if ((jsonObj.get("coAddress") != null && !jsonObj.get("coAddress").isJsonNull()) && !jsonObj.get("coAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coAddress").toString()));
      }
      if ((jsonObj.get("commune") != null && !jsonObj.get("commune").isJsonNull()) && !jsonObj.get("commune").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commune` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commune").toString()));
      }
      if ((jsonObj.get("communeCode") != null && !jsonObj.get("communeCode").isJsonNull()) && !jsonObj.get("communeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communeCode").toString()));
      }
      if ((jsonObj.get("companyDeregistrationDate") != null && !jsonObj.get("companyDeregistrationDate").isJsonNull()) && !jsonObj.get("companyDeregistrationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyDeregistrationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyDeregistrationDate").toString()));
      }
      if ((jsonObj.get("companyHolder") != null && !jsonObj.get("companyHolder").isJsonNull()) && !jsonObj.get("companyHolder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyHolder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyHolder").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyRegistrationDate") != null && !jsonObj.get("companyRegistrationDate").isJsonNull()) && !jsonObj.get("companyRegistrationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyRegistrationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyRegistrationDate").toString()));
      }
      if ((jsonObj.get("county") != null && !jsonObj.get("county").isJsonNull()) && !jsonObj.get("county").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `county` to be a primitive type in the JSON string but got `%s`", jsonObj.get("county").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("faxNumber") != null && !jsonObj.get("faxNumber").isJsonNull()) && !jsonObj.get("faxNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `faxNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("faxNumber").toString()));
      }
      if ((jsonObj.get("industryCode") != null && !jsonObj.get("industryCode").isJsonNull()) && !jsonObj.get("industryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industryCode").toString()));
      }
      if ((jsonObj.get("industryText") != null && !jsonObj.get("industryText").isJsonNull()) && !jsonObj.get("industryText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `industryText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("industryText").toString()));
      }
      if ((jsonObj.get("legalGroupCode") != null && !jsonObj.get("legalGroupCode").isJsonNull()) && !jsonObj.get("legalGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalGroupCode").toString()));
      }
      if ((jsonObj.get("legalGroupText") != null && !jsonObj.get("legalGroupText").isJsonNull()) && !jsonObj.get("legalGroupText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalGroupText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalGroupText").toString()));
      }
      if ((jsonObj.get("numberEmployeesInterval") != null && !jsonObj.get("numberEmployeesInterval").isJsonNull()) && !jsonObj.get("numberEmployeesInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberEmployeesInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberEmployeesInterval").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("preliminaryTaxRegDate") != null && !jsonObj.get("preliminaryTaxRegDate").isJsonNull()) && !jsonObj.get("preliminaryTaxRegDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preliminaryTaxRegDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preliminaryTaxRegDate").toString()));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      if ((jsonObj.get("statusDateFrom") != null && !jsonObj.get("statusDateFrom").isJsonNull()) && !jsonObj.get("statusDateFrom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusDateFrom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusDateFrom").toString()));
      }
      if ((jsonObj.get("statusTextDetailed") != null && !jsonObj.get("statusTextDetailed").isJsonNull()) && !jsonObj.get("statusTextDetailed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusTextDetailed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusTextDetailed").toString()));
      }
      if ((jsonObj.get("statusTextHigh") != null && !jsonObj.get("statusTextHigh").isJsonNull()) && !jsonObj.get("statusTextHigh").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusTextHigh` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusTextHigh").toString()));
      }
      if ((jsonObj.get("topDirectorFunction") != null && !jsonObj.get("topDirectorFunction").isJsonNull()) && !jsonObj.get("topDirectorFunction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topDirectorFunction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topDirectorFunction").toString()));
      }
      if ((jsonObj.get("topDirectorName") != null && !jsonObj.get("topDirectorName").isJsonNull()) && !jsonObj.get("topDirectorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topDirectorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topDirectorName").toString()));
      }
      if ((jsonObj.get("town") != null && !jsonObj.get("town").isJsonNull()) && !jsonObj.get("town").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `town` to be a primitive type in the JSON string but got `%s`", jsonObj.get("town").toString()));
      }
      if ((jsonObj.get("vatRegDate") != null && !jsonObj.get("vatRegDate").isJsonNull()) && !jsonObj.get("vatRegDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatRegDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatRegDate").toString()));
      }
      if ((jsonObj.get("visitAddress") != null && !jsonObj.get("visitAddress").isJsonNull()) && !jsonObj.get("visitAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitAddress").toString()));
      }
      if ((jsonObj.get("visitCommune") != null && !jsonObj.get("visitCommune").isJsonNull()) && !jsonObj.get("visitCommune").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitCommune` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitCommune").toString()));
      }
      if ((jsonObj.get("visitCounty") != null && !jsonObj.get("visitCounty").isJsonNull()) && !jsonObj.get("visitCounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitCounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitCounty").toString()));
      }
      if ((jsonObj.get("visitStreet") != null && !jsonObj.get("visitStreet").isJsonNull()) && !jsonObj.get("visitStreet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitStreet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitStreet").toString()));
      }
      if ((jsonObj.get("visitTown") != null && !jsonObj.get("visitTown").isJsonNull()) && !jsonObj.get("visitTown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitTown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitTown").toString()));
      }
      if ((jsonObj.get("visitZipCode") != null && !jsonObj.get("visitZipCode").isJsonNull()) && !jsonObj.get("visitZipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitZipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitZipCode").toString()));
      }
      if ((jsonObj.get("webAddress") != null && !jsonObj.get("webAddress").isJsonNull()) && !jsonObj.get("webAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAddress").toString()));
      }
      if ((jsonObj.get("zipCode") != null && !jsonObj.get("zipCode").isJsonNull()) && !jsonObj.get("zipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Overview.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Overview' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Overview> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Overview.class));

       return (TypeAdapter<T>) new TypeAdapter<Overview>() {
           @Override
           public void write(JsonWriter out, Overview value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Overview read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Overview given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Overview
   * @throws IOException if the JSON string is invalid with respect to Overview
   */
  public static Overview fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Overview.class);
  }

  /**
   * Convert an instance of Overview to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

